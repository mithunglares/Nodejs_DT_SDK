"use strict";
/*
    Copyright 2019 Dynatrace LLC

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.createInstance = exports.MessageDestinationType = exports.ChannelType = exports.SDKState = exports.MessageSystemVendor = exports.DatabaseVendor = void 0;
var Stub_1 = require("./Stub");
var DbVendors = require("./DatabaseVendors");
exports.DatabaseVendor = DbVendors;
var MessageSystemVendors = require("./MessageSystemVendors");
exports.MessageSystemVendor = MessageSystemVendors;
// ============================================================================
// common interfaces/types
/**
 * Defines the state, in which the SDK can be.
 */
var SDKState;
(function (SDKState) {
    /// SDK is connected to OneAgent and capturing data.
    SDKState[SDKState["ACTIVE"] = 0] = "ACTIVE";
    /// SDK is connected to OneAgent, but capturing is disabled. It is good practice to skip creating SDK transactions to save resources.
    SDKState[SDKState["TEMPORARILY_INACTIVE"] = 1] = "TEMPORARILY_INACTIVE";
    /// SDK isn't connected to OneAgent, so it will never capture data.
    SDKState[SDKState["PERMANENTLY_INACTIVE"] = 2] = "PERMANENTLY_INACTIVE";
})(SDKState = exports.SDKState || (exports.SDKState = {}));
/**
 * Specifies the protocol used as communication channel.
 */
var ChannelType;
(function (ChannelType) {
    /// To be used for other protocols
    ChannelType[ChannelType["OTHER"] = 0] = "OTHER";
    /// TCP/IP
    ChannelType[ChannelType["TCP_IP"] = 1] = "TCP_IP";
    /// Unix Domain socket
    ChannelType[ChannelType["UNIX_DOMAIN_SOCKET"] = 2] = "UNIX_DOMAIN_SOCKET";
    /// Name Pipe
    ChannelType[ChannelType["NAMED_PIPE"] = 3] = "NAMED_PIPE";
    /// Communication is in process (e.g. using files,..)
    ChannelType[ChannelType["IN_PROCESS"] = 4] = "IN_PROCESS";
})(ChannelType = exports.ChannelType || (exports.ChannelType = {}));
// ============================================================================
// Types for Messaging
/**
 * Defines the destination type of a message.
 */
var MessageDestinationType;
(function (MessageDestinationType) {
    MessageDestinationType[MessageDestinationType["QUEUE"] = 0] = "QUEUE";
    MessageDestinationType[MessageDestinationType["TOPIC"] = 1] = "TOPIC";
})(MessageDestinationType = exports.MessageDestinationType || (exports.MessageDestinationType = {}));
// ----------------------------------------------------------------------------
/**
 * Creates an SDK API object offering APIs to OneAgent.
 * @return {@link OneAgentSDK} to work with
 */
function createInstance() {
    if (typeof __DT_GETAGENTAPI__ === "function") {
        return __DT_GETAGENTAPI__(8) || Stub_1.getDummySdk();
    }
    return Stub_1.getDummySdk();
}
exports.createInstance = createInstance;
